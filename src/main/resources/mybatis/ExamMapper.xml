<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="examInfo">
	<!-- 查询考试数据的map by yangzq -->
	<resultMap id="queryExamResultMap" type="com.recom.model.ExamQuestionModel">
		<id property="exquId" column="exqu_id" />
		<result property="exOrdinal" column="rgpa_ordinal" />
		<result property="score" column="rgpa_score" />
		<result property="exDescribe" column="exqu_describe" />
		<result property="exType" column="exqu_type" />
		<result property="correctAnswer" column="exqu_correctanswer" />
		<result property="exDifficulty" column="exqu_difficulty" />
		<result property="attachment" column="exqu_attachment" />
		<collection property="options" ofType="com.recom.domain.Option">
			<id property="optiId" column="opti_id" />
			<result property="optiQuesId" column="opti_ques_id" />
			<result property="optiDescribe" column="opti_describe" />
			<result property="optiOrdinal" column="opti_ordinal" />
			<result property="optiAttachment" column="opti_attachment" />
		</collection>
	</resultMap>


	<!-- 课程测试试卷对应的相应结果数据 by yangzq -->
	<resultMap id="examResultMap" type="com.recom.model.ExamResultModel">
		<id column="rate_id" property="rateId" />
		<result column="rate_score" property="totalScore" />
		<result column="rate_starttime" property="startTime" />
		<result column="rate_submittime" property="submitTime" />
		<result column="rate_isfinished" property="isfinish" />
		<collection property="solves" ofType="com.recom.domain.Solve">
			<id column="solv_id" property="solvId" />
			<result column="solv_rate_id" property="solvRateId" />
			<result column="solv_ordinal" property="solvOrdinal" />
			<result column="solv_answer" property="solvAnswer" />
			<result column="solv_score" property="solvScore" />
		</collection>
	</resultMap>


	<!-- 我的测试，所有我的课程测试信息 by yangzq -->
	<select id="select" parameterType="java.util.HashMap"
		resultType="com.recom.model.ExamInfo">
		<![CDATA[
		SELECT ex.exin_id as exinId,
			ex.exin_name as exinName,
			ex.exin_describe as exinDescribe,
			ex.exin_endtime as exinEndtime,
			ex.exin_begintime as exinBegintime,
			ex.exin_createtime as exinCreatetime,
			ex.exin_totaltime as exinTotaltime,
			ex.exin_expa_id as exinExpaId,
			co.cour_id as courseId,
			co.cour_name as courseName
		FROM ExamInformation ex 
		LEFT OUTER JOIN ExamPaper ep ON ep.expa_id=ex.exin_expa_id
		LEFT OUTER JOIN Re_SelectCource re ON re.rsco_cour_id = ep.expa_cour_id
		LEFT OUTER JOIN Course co ON co.cour_id = ep.expa_cour_id
		]]>
		<trim prefix="where" prefixOverrides="AND|OR">
			rsco_valid=1 and rsco_verify=1
			<if test="userId>0 and userId != null">
				and re.rsco_user_id=#{userId}
			</if>
			<if test="courseId > 0 and courseId!=null">
				and co.cour_id = #{courseId}
			</if>
			<if test="searchType!=null and searchWord!=null">
				<choose>
					<when test="searchType==1">
						and ex.exin_name like
						CONCAT('%','${searchWord}','%' )
					</when>
					<when test="searchType==2">
						and co.cour_name like
						CONCAT('%','${searchWord}','%' )
					</when>
				</choose>
			</if>
			<if test="startTime != null and startTime != ''">
				and <![CDATA[(ex.exin_begintime>=#{startTime} or (ex.exin_begintime is null and ex.exin_createtime>=#{startTime}))]]>
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[(ex.exin_endtime<=#{endTime} or (ex.exin_endtime is null and ex.exin_createtime<=#{endTime}))]]>
				<!-- and ex.exin_endtime>=#{endTime} -->
			</if>
			AND
			co.cour_state = 1
			AND
			co.cour_verify = 1
		</trim>
		ORDER BY ex.exin_createtime DESC
		<if test="maxCount!=null">
			limit
			<if test="startIndex!=null">
				#{startIndex},
			</if>
			#{maxCount}
		</if>
	</select>

	<select id="selectCount" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(ex.exin_id) 
			FROM ExamInformation ex
			LEFT OUTER JOIN ExamPaper ep ON ep.expa_id=ex.exin_expa_id
			LEFT OUTER JOIN Re_SelectCource re ON re.rsco_cour_id = ep.expa_cour_id
			LEFT OUTER JOIN Course co ON co.cour_id = ep.expa_cour_id
		]]>
		<trim prefix="where" prefixOverrides="AND|OR">
			rsco_valid=1 and rsco_verify=1 and co.cour_state=1 and co.cour_verify=1 
			<if test="userId>0 and userId != null">
				and re.rsco_user_id=#{userId}
			</if>
			<if test="courseId > 0 and courseId!=null">
				and co.cour_id = #{courseId}
			</if>
			<if test="searchType!=null and searchWord!=null">
				<choose>
					<when test="searchType==1">
						and ex.exin_name like
						CONCAT('%','${searchWord}','%' )
					</when>
					<when test="searchType==2">
						and co.cour_name like
						CONCAT('%','${searchWord}','%' )
					</when>
				</choose>
			</if>
			<if test="startTime != null and startTime != ''">
				and <![CDATA[(ex.exin_begintime>=#{startTime} or (ex.exin_begintime is null and ex.exin_createtime>=#{startTime}))]]>
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[(ex.exin_endtime<=#{endTime} or (ex.exin_endtime is null and ex.exin_createtime<=#{endTime}))]]>
				<!-- and ex.exin_endtime>=#{endTime} -->
			</if>
		</trim>
	</select>

	<!-- 查询一个考试信息 by yangzq -->
	<select id="selectOne" parameterType="INTEGER"
		resultType="com.recom.model.ExamInfo">
	<![CDATA[				
		SELECT	
			ex.exin_id as exinId,
			ex.exin_name as exinName,
			ex.exin_describe as exinDescribe,
			ex.exin_createtime as exinCreatetime,
			ex.exin_endtime as exinEndtime,
			ex.exin_begintime as exinBegintime,
			ex.exin_totaltime as exinTotaltime,
			ex.exin_expa_id as exinExpaId
		FROM 
			ExamInformation ex 
		WHERE
			ex.exin_id=#{examinId}
	]]>
	</select>

	<!-- 查询一个试卷信息 by yangzq -->
	<select id="selectExamPaper" parameterType="INTEGER"
		resultType="com.recom.domain.ExamPaper">
	<![CDATA[				
		SELECT	
			ep.expa_id as expaId,
			ep.expa_cour_id as expaCourId,
			ep.expa_ordinal as expaOrdinal,
			ep.expa_difficulty as expaDifficulty,
			ep.expa_totalscore as expaTotalscore,
			ep.expa_name as expaName,
			ep.expa_describe as expaDescribe,
			ep.expa_createtime as expaCreatetime,
			ep.expa_create_userid as expaCreateUserid,
			ep.expa_type as expaType,
			ep.expa_gppa_id as expaGppaId
		FROM 
			ExamPaper ep
		WHERE
			ep.expa_id=#{paperId}
	]]>
	</select>

	<!-- 查询试卷 by yangzq -->
	<select id="queryPaperData" parameterType="INTEGER" resultMap="queryExamResultMap">
	<![CDATA[				
		SELECT
			rg.rgpa_ordinal,
			rg.rgpa_score,
			ex.exqu_id,
			ex.exqu_describe,
			ex.exqu_type,
			ex.exqu_correctanswer,
			ex.exqu_difficulty,
			ex.exqu_attachment,
			op.opti_id,
			op.opti_ques_id,
			op.opti_describe,
			op.opti_ordinal,
			op.opti_attachment
		FROM Re_GroupPaper  rg 
			LEFT OUTER JOIN  ExamQuestion ex ON rg.rgpa_exqu_id=ex.exqu_id
			LEFT OUTER JOIN `Option` op ON op.opti_ques_id=ex.exqu_id
		WHERE
			rg.rgpa_expa_id=#{paperId}
		ORDER BY ex.exqu_type
	]]>
	</select>

	<!-- 察看我的成绩统计记录 by yangzq -->
	<select id="selectAllMyGradesCount" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		<![CDATA[
			SELECT
				COUNT(rate.rate_id)
			FROM
				Re_AutoTest rate
			LEFT JOIN ExamInformation exin ON exin.exin_id = rate.rate_exin_id
			LEFT JOIN ExamPaper ep ON ep.expa_id = exin.exin_expa_id
			left join Course on cour_id=ep.expa_cour_id 
			left join Re_SelectCource on (ep.expa_cour_id=rsco_cour_id and rate.rate_user_id=rsco_user_id) 
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			rsco_verify=1 and rsco_valid=1 and cour_verify=1 and cour_state=1 
			<if test="quCourse>0">
				and ep.expa_cour_id=#{quCourse}
			</if>
			<if test="startTime != null and startTime != ''">
				and rate.rate_submittime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[rate.rate_submittime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and exin.exin_name like CONCAT('%','${searchWord}','%' )
			</if>
			<if test="isfinished!=null">
				and rate.rate_isfinished = #{isfinished}
			</if>
			<if test="userId!=null and userId > 0">
				and rate.rate_user_id = #{userId}
			</if>
		</trim>
	</select>

	<!-- 察看我的成绩 by yangzq -->
	<select id="selectAllMyGradesDetail" parameterType="java.util.HashMap"
		resultType="com.recom.model.GradeModel">
		<![CDATA[
			SELECT
				rate.rate_id as rateId,
				rate.rate_submittime as exinTestTime,
				rate.rate_isfinished as isfinished,
				rate.rate_score as myScore,
				exin.exin_describe as exinDescribe,
				exin.exin_name as exinName,
				exin.exin_id as exinId,
				ep.expa_id as paperId,
				cs.cour_id as courseId,
				cs.cour_name as courseName
			FROM
				Re_AutoTest rate 
			LEFT JOIN ExamInformation exin ON exin.exin_id = rate.rate_exin_id
			LEFT JOIN ExamPaper ep ON ep.expa_id = exin.exin_expa_id
			LEFT JOIN Course cs ON cs.cour_id = ep.expa_cour_id
			left join Re_SelectCource on (ep.expa_cour_id=rsco_cour_id and rate.rate_user_id=rsco_user_id) 
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			rsco_verify=1 and rsco_valid=1 and cour_verify=1 and cour_state=1 
			<if test="quCourse>0">
				and ep.expa_cour_id=#{quCourse}
			</if>
			<if test="startTime != null and startTime != ''">
				and rate.rate_submittime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[rate.rate_submittime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and exin.exin_name like CONCAT('%','${searchWord}','%' )
			</if>
			<if test="userId!=null and userId > 0">
				and rate.rate_user_id = #{userId}
			</if>
		</trim>
		ORDER BY rate.rate_submittime DESC
		<if test="maxCount!=null">
			limit
			<if test="startIndex!=null">
				#{startIndex},
			</if>
			#{maxCount}
		</if>
	</select>


	<!-- 课程测试管理，查询记录数量 by yangzq -->
	<select id="queryAllExamInfoCount" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		<![CDATA[
		SELECT 
			COUNT(exin.exin_id) 
		FROM ExamInformation exin
		LEFT OUTER JOIN ExamPaper ep ON ep.expa_id = exin.exin_expa_id
		LEFT OUTER JOIN Course cs ON ep.expa_cour_id = cs.cour_id
		LEFT OUTER JOIN User us ON us.user_id = ep.expa_create_userid
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			cs.cour_state=1 and cs.cour_verify=1 
			<if test="departId != null and departId > 0">
				and us.user_depa_id = #{departId}
			</if>
			<if test="teacherId != null and teacherId != ''">
				and cs.cour_teacher_ids like
				CONCAT('%','${teacherId}','%')
			</if>
			<if test="startTime != null and startTime != ''">
				and exin.exin_begintime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[exin.exin_begintime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and exin.exin_name like CONCAT('%','${searchWord}','%' )
			</if>
			<if test="courseId!=null and courseId > 0">
				and cs.cour_id = #{courseId}
			</if>
		</trim>
	</select>

	<!-- 课程测试管理，查询已设置课程详细 by yangzq -->
	<select id="queryAllExamInfo" parameterType="java.util.HashMap"
		resultType="com.recom.model.ExamInfo">
		<![CDATA[
		SELECT 
			exin.exin_id as exinId,
			exin.exin_name as exinName,
			exin.exin_describe as exinDescribe,
			exin.exin_begintime as exinBegintime,
			exin.exin_createtime as exinCreatetime,
			exin.exin_totaltime as exinTotaltime,
			exin.exin_endtime as exinEndtime,
			exin.exin_expa_id as exinExpaId,
			cs.cour_id as courseId,
			cs.cour_name as courseName
		FROM ExamInformation exin
		LEFT OUTER JOIN ExamPaper ep ON ep.expa_id = exin.exin_expa_id
		LEFT OUTER JOIN Course cs ON ep.expa_cour_id = cs.cour_id
		LEFT OUTER JOIN User us ON us.user_id = ep.expa_create_userid
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			cs.cour_state=1 and cs.cour_verify=1 
			<if test="departId != null and departId > 0">
				and us.user_depa_id = #{departId}
			</if>
			<if test="teacherId != null and teacherId != ''">
				and cs.cour_teacher_ids like
				CONCAT('%','${teacherId}','%')
			</if>
			<if test="startTime != null and startTime != ''">
				and exin.exin_begintime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[exin.exin_begintime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and exin.exin_name like CONCAT('%','${searchWord}','%' )
			</if>
			<if test="courseId!=null and courseId > 0">
				and cs.cour_id = #{courseId}
			</if>
		</trim>
		ORDER BY exin.exin_createtime DESC
		<if test="maxCount!=null">
			limit
			<if test="startIndex!=null">
				#{startIndex},
			</if>
			#{maxCount}
		</if>
	</select>

	<!-- 根据测试信息名字查找是否有记录 by yangzq -->
	<select id="selectExamInfoCountByName" parameterType="String"
		resultType="int">
	<![CDATA[
		SELECT
			COUNT(exin.exin_id)
		FROM
			ExamInformation exin
		WHERE
			exin.exin_name = #{name}
	]]>
	</select>

	<!-- 根据提交人id和考试信息id查询到相关测试数据 by yangzq -->
	<select id="examAutoTest" parameterType="com.recom.model.ExamResultModel"
		resultType="com.recom.domain.ReAutoTest">
	<![CDATA[
	SELECT
		rate_id as rateId,
		rate_user_id as rateUserId, 
		rate_exin_id as rateExinId, 
		rate_score as rateScore,
		rate_starttime as rateStarttime,
		rate_submittime as rateSubmittime,
		rate_isfinished as rateIsfinished
	FROM
		Re_AutoTest
	WHERE
		rate_user_id = #{userId}
	AND rate_exin_id = #{examinId}
	]]>
	</select>

	<!-- 考试结束插入结果表re_autoTest by yangzq -->
	<insert id="examResult" parameterType="com.recom.model.ExamResultModel"
		useGeneratedKeys="true" keyProperty="rateId">
	<![CDATA[
		INSERT INTO
			Re_AutoTest (
			rate_user_id, 
			rate_exin_id, 
			rate_score,
			rate_starttime,
			rate_submittime,
			rate_isfinished
		)
		values (
			#{userId,jdbcType=INTEGER},
			#{examinId,jdbcType=INTEGER},
			#{totalScore,jdbcType=FLOAT},
			#{startTime,jdbcType=TIMESTAMP},
			#{submitTime,jdbcType=TIMESTAMP},
			#{isfinish,jdbcType=BIT}
		)
	]]>
	</insert>

	<!-- 考试结束插入试题结果表solve by yangzq -->
	<insert id="resultQues" parameterType="com.recom.model.ResultQuesModel">
	<![CDATA[
		INSERT INTO
			Solve (
			solv_rate_id, 
			solv_ordinal, 
			solv_answer,
			solv_score
		)
		values (
			#{rateId,jdbcType=INTEGER},
			#{ordinal,jdbcType=INTEGER},
			#{answer,jdbcType=VARCHAR},
			#{score,jdbcType=FLOAT}
		)
	]]>
	</insert>

	<!-- 评卷时保存最新的评卷分数 by yangzq -->
	<update id="markScore" parameterType="java.util.HashMap">
	<![CDATA[
	UPDATE
	    Solve
	SET
		solv_score = #{score}
	WHERE
		solv_rate_id = #{rateId}
	AND solv_ordinal = #{ordinal}
	]]>
	</update>

	<!-- 查找考试对应的相应结果数据 by yangzq -->
	<select id="loadExamResult" parameterType="java.util.HashMap"
		resultMap="examResultMap">
	<![CDATA[
	SELECT
		rate_id,
		rate_score,
		rate_starttime,
		rate_submittime,
		rate_isfinished,
		solv_id,
		solv_rate_id, 
		solv_ordinal, 
		solv_answer,
		solv_score
	FROM
		Re_AutoTest
	LEFT OUTER JOIN Solve ON rate_id = solv_rate_id
	WHERE
		rate_user_id = #{userId}
	AND rate_exin_id = #{exinId}
	ORDER BY solv_ordinal
	]]>
	</select>

	<!-- 非第一次提交测试成绩的，则更新测试结果表 by yangzq -->
	<update id="updateAutoTest" parameterType="com.recom.model.ExamResultModel">
		<![CDATA[
		UPDATE 
			Re_AutoTest
		SET
			rate_user_id = #{userId},
			rate_exin_id = #{examinId},
			rate_score = #{totalScore},
			rate_starttime = #{startTime},
			rate_submittime = #{submitTime},
			rate_isfinished = #{isfinish}
		WHERE
			rate_id=#{rateId}
	]]>
	</update>

	<!-- 查詢一门考試結果数目 -->
	<select id="selectSolveCount" parameterType="Integer"
		resultType="int">
	<![CDATA[
		SELECT
			COUNT(so.solv_id)
		FROM
			Solve so
		WHERE
			so.solv_rate_id = #{rateId};
	]]>
	</select>

	<!-- 保存考试结果数据 by yangzq -->
	<update id="resultQuesForUpdate" parameterType="com.recom.model.ResultQuesModel">
	<![CDATA[
		UPDATE
			Solve
		SET
			solv_answer=#{answer},
			solv_score=#{score}
		WHERE
			solv_rate_id=#{rateId}
		AND solv_ordinal=#{ordinal}
	]]>
	</update>


	<!-- 创建新的课程测试 by yangzq -->
	<insert id="newExaminfo" parameterType="com.recom.model.ExamInfo">
	<![CDATA[
		INSERT INTO
			ExamInformation (
			exin_expa_id, 
			exin_name, 
			exin_describe,
			exin_totaltime,
			exin_createtime,
			exin_begintime,
			exin_endtime
		)
		values (
			#{exinExpaId},
			#{exinName},
			#{exinDescribe},
			#{exinTotaltime},
			#{exinCreatetime},
			#{exinBegintime},
			#{exinEndtime}
		)
	]]>
	</insert>

	<!-- 更新课程测试数据 by yangzq -->
	<update id="updateExaminfo" parameterType="com.recom.model.ExamInfo">
	<![CDATA[
		UPDATE
			ExamInformation
		SET
    		exin_name = #{exinName},
    		exin_describe = #{exinDescribe},
    		exin_totaltime = #{exinTotaltime},
    		exin_begintime = #{exinBegintime},
    		exin_endtime = #{exinEndtime}
		WHERE
			exin_id =  #{exinId}
	]]>
	</update>

	<!-- 删除课程测试 by yangzq -->
	<delete id="delExin" parameterType="String">
	<![CDATA[
		DELETE FROM
			ExamInformation
		WHERE
			exin_id in 
	]]>
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 返回所有考试课程 by lixw -->
	<select id="getExamCourse" resultType="com.recom.model.ExamCourModel">
		<![CDATA[
		SELECT 
		     Course.cour_id as courId,
		     Course.cour_name as courName
		 FROM
		    ExamInformation,ExamPaper,Course
		 WHERE
		    ExamInformation.exin_expa_id = ExamPaper.expa_id and
		    ExamPaper.expa_cour_id = Course.cour_id
		]]>

	</select>

	<!-- 删除个人考试记录，管理员操作by lixw -->
	<delete id="deleteSlove" parameterType="String">
		<![CDATA[
		DELETE  FROM
		    Solve
		 WHERE
		     solv_rate_id in
		]]>
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>

	</delete>
	<!--删除课程成绩，管理员 by lixw -->
	<delete id="deleteCourseScore" parameterType="String">
		<![CDATA[
		DELETE  FROM
		    Re_AutoTest
		 WHERE
		     rate_id in
		]]>
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>

	</delete>
	<select id="getAllScore" parameterType="java.util.HashMap"
		resultType="com.recom.model.ScoreModel">
		<![CDATA[
		SELECT 
		   Re_AutoTest.rate_id as rateId,
		   ExamInformation.exin_name as rateCourName,
		   User.user_loginname as rateUserIdNum,
		   User.user_realname as rateUserName,
		   Re_AutoTest.rate_score as rateScore,
		   Re_AutoTest.rate_submittime as rateTime,
		   Course.cour_name as courName,
		   ExamInformation.exin_id as examinId,
		   User.user_id as userId,
		   ExamPaper.expa_id as paperId,
		   Re_AutoTest.rate_isfinished  as  rateIsFinished
		 FROM
		    Re_AutoTest
		    LEFT OUTER JOIN ExamInformation ON ExamInformation.exin_id=Re_AutoTest.rate_exin_id
			LEFT OUTER JOIN ExamPaper ON ExamPaper.expa_id = ExamInformation.exin_expa_id
			LEFT OUTER JOIN User ON User.user_id = Re_AutoTest.rate_user_id
			LEFT OUTER JOIN Course ON Course.cour_id = ExamPaper.expa_cour_id
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			cour_verify=1 and cour_state=1
			<if test="departId!=null and departId>0">
				and User.user_depa_id = #{departId}
			</if>
			<if test="teacherId!=null and teacherId != ''">
				and Course.cour_teacher_ids like
				CONCAT('%','${teacherId}','%')
			</if>
			<if test="courId!=null and courId > 0">
				and Course.cour_id = #{courId}
			</if>
			<if test="startTime != null and startTime != ''">
				and Re_AutoTest.rate_submittime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[Re_AutoTest.rate_submittime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and (ExamInformation.exin_name like
				CONCAT('%','${searchWord}','%' ) or Course.cour_name like
				CONCAT('%','${searchWord}','%' ))
			</if>
		</trim>
		Order By Re_AutoTest.rate_starttime Desc
		<if test="maxCount!=null">
			limit
			<if test="startIndex!=null">
				#{startIndex},
			</if>
			#{maxCount}
		</if>
	</select>

	<!-- 成绩统计记录 by lixw -->
	<select id="countAllScore" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">
		<![CDATA[
			SELECT
				COUNT(Re_AutoTest.rate_id)
		    FROM
		    Re_AutoTest
		    LEFT OUTER JOIN ExamInformation ON ExamInformation.exin_id=Re_AutoTest.rate_exin_id
			LEFT OUTER JOIN ExamPaper ON ExamPaper.expa_id = ExamInformation.exin_expa_id
			LEFT OUTER JOIN User ON User.user_id = Re_AutoTest.rate_user_id
			LEFT OUTER JOIN Course ON Course.cour_id = ExamPaper.expa_cour_id
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			cour_verify=1 and cour_state=1 
			<if test="departId!=null and departId>0">
				and User.user_depa_id = #{departId}
			</if>
			<if test="teacherId!=null and teacherId != ''">
				and Course.cour_teacher_ids like
				CONCAT('%','${teacherId}','%')
			</if>
			<if test="courId>0">
				and Course.cour_id = #{courId}
			</if>
			<if test="startTime != null and startTime != ''">
				and Re_AutoTest.rate_submittime>=#{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				and <![CDATA[Re_AutoTest.rate_submittime<=#{endTime}]]>
			</if>
			<if test="searchWord!=null">
				and (ExamInformation.exin_name like
				CONCAT('%','${searchWord}','%' ) or Course.cour_name like
				CONCAT('%','${searchWord}','%' ))
			</if>
		</trim>
	</select>


	<select id="selectRoleByUserId" parameterType="Integer"
		resultType="java.lang.Integer">
		<![CDATA[
			SELECT 
			     COUNT(Re_UserRole.rero_id)
			FROM
			     Re_UserRole
			WHERE
			     Re_UserRole.rero_user_id=#{userId} 
			  
		]]>
	</select>

	<!-- 检查用户是否已参加考试 by yangzq -->
	<select id="checkCourseIsTest" parameterType="map" resultType="java.lang.Integer">
		<![CDATA[
			SELECT 
			     COUNT(rate.rate_id)
			FROM
			     Re_AutoTest rate
			LEFT JOIN ExamInformation exin ON exin.exin_id = rate.rate_exin_id
			LEFT JOIN ExamPaper ep ON ep.expa_id = exin.exin_expa_id
			WHERE
			     rate.rate_user_id=#{userId} 
			AND  ep.expa_cour_id=#{courseId}
		]]>
	</select>
	<select id="courseTestScore" parameterType="map"
		resultType="com.recom.model.TestCondition">
		SELECT
		re.rsco_totalScore as totalScore,
		co.cour_test_limitScore as limitScore
		FROM
		Re_SelectCource re
		LEFT
		OUTER
		JOIN Course co ON co.cour_id = re.rsco_cour_id
		WHERE
		rsco_valid=1 and
		rsco_verify=1 and
		re.rsco_cour_id=#{courseId}
		AND
		re.rsco_user_id=#{userId}
	</select>
	<!-- 测试对应的课程成绩总和 -->
	<select id="courseScore" parameterType="java.util.HashMap"
		resultType="java.lang.Float">
		<![CDATA[
			SELECT
				SUM(re.rate_score)
			FROM
				Re_AutoTest re
			LEFT OUTER JOIN ExamInformation ei ON ei.exin_id = re.rate_exin_id
			LEFT OUTER JOIN ExamPaper ep ON ep.expa_id = ei.exin_expa_id
			WHERE
				ep.expa_cour_id=#{courseId}
				AND re.rate_user_id=#{userId}
		]]>
	</select>
</mapper>